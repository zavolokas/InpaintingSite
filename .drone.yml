kind: pipeline
type: docker
name: default

steps:
  - name: build
    image: microsoft/dotnet:2.0-sdk
    commands:
      - dotnet build -c Release
    when:
      event: [push]

  - name: publish-docker-image
    image: plugins/docker
    settings:
      username: 
        from_secret: DOCKER_USERNAME  # we will inject your dockerhub username using drone secrets. 
      password: 
        from_secret: DOCKER_PASSWORD # we will inject your dockerhub password using drone secrets.
      repo: zavolokas/inpainter # refer to dockerhub documentation for repo naming conventions
      tags: 
        - latest
        - ${DRONE_TAG}
      #dockerfile: Dockerfile
    when:
      branch: [ master ]
      event: [ tag ] # step only triggers on push events

  - name: validate-cf
    image: robertstettner/drone-cloudformation
    settings:
      mode: validate
      stackname: inpainter-cluster
      template: cloudformation/cluster.yml
      access_key: 
        from_secret: AWS_ACCESS_KEY
      secret_key:
        from_secret: AWS_SECRET_KEY
    when:
      branch: [drone-cf]
      event: [push]

  - name: create-update-cf-stack
    image: robertstettner/drone-cloudformation
    settings:
      pull: true
      stackname: app-ecs-cfn-stack
      template: cloudformation/cluster.yml
      region: us-east-1
      access_key: 
        from_secret: AWS_ACCESS_KEY
      secret_key:
        from_secret: AWS_SECRET_KEY
      params:
        Version: 1
        Environment: staging
    when:
      branch: [drone-cf]
      event: [push]

  - name: deploy-to-ecs
    image: peloton/drone-ecs
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    service:
      from_secret: SERVICE_NAME
    cluster:
      from_secret: CLUSTER_NAME  
    region: eu-west-2
    family: inpainter
    docker_image: docker.io/zavolokas/inpainter
    image_tag: latest
    deployment_configuration: 50 200
    task_network_mode: "awsvpc"
    container_name: inpainter
    service_network_subnets:
      - subnet-05e00e9941c9480a3
      - subnet-03a6d1406f9c5226a
    port_mappings:
      - 5000 80
    when:
      branch: [master]
      event: [tag]


  # deploy:
  #   image: joshdvir/drone-ecs-deploy
  #   cluster: 
  #     from_secret: CLUSTER_NAME
  #   service: 
  #     from_secret: SERVICE_NAME
  #   image_name: docker.io/zavolokas/inpainter:latest
  #   aws_region: eu-west-2 # defaults to us-east-1
  #   # timeout: "600" # defaults to 300 / 5 min
  #   # max: "200" # defaults to 200
  #   # min: "100" # defaults to 100
  #   aws_access_key_id:
  #     from_secret: AWS_ACCESS_KEY_ID
  #   aws_secret_access_key:
  #     from_secret: AWS_SECRET_ACCESS_KEY
  #   when:
  #     branch: [deploy-to-ecs]
  #     event: [push]
  
  # ecs:
  #   image: peloton/drone-ecs
  #   access_key:
  #     from_secret: AWS_ACCESS_KEY_ID
  #   secret_key:
  #     from_secret: AWS_SECRET_ACCESS_KEY
  #   service:
  #     from_secret: SERVICE_NAME
  #   cluster:
  #     from_secret: CLUSTER_NAME  
  #   region: eu-west-2
  #   family: inpainter
  #   docker_image: docker.io/zavolokas/inpainter
  #   image_tag: latest
  #   # environment_variables:
  #   #   - DATABASE_URI=database uri
  #   deployment_configuration: 50 200
  #   task_network_mode: "awsvpc"
  #   compatibilities: [ "FARGATE" ]
  #   task_cpu: 1024 # cpu & memory are related - https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-cpu-memory-error.html
  #   task_memory: 2048
  #   port_mappings:
  #     - 8069 8069
  #   memory: 512
  #   service_network_subnets: 
  #     - subnet-0bb01e08153c4393c
  #     - subnet-05eee5854fd39361d
  #   # service_network_security_groups:
  #   #   - sg-051621bfc71107403

  